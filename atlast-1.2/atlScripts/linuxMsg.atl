\  "struct.atl" include

"linuxMsg.atl" type cr

0 memsafe

32 string iam

struct
    32 chars field sender
     1 chars field fields
     8 chars field cmd
    16 chars field key
    32 chars field value
endstruct /msg

struct
    32 chars field sender
     1 chars field fields
     8 chars field cmd
     7 chars field padding
     8 chars field buffer
     2 chars field bufferLength
     2 chars field fileIndex
endstruct /msgFs

variable init_run
variable shm-fd
variable shared-buffer

/msg /msgFs max dup string cmd-buffer
constant msgSize

1024 mkbuffer tst_rx
msgSize mkbuffer tst_tx

32 chars string destination

: init
    init_run @ 0= if
        -1 shm-fd !
        "/client" iam strcpy
        
        "/server" destination strcpy
\        here /msg allot out !
        tst_tx msgSize erase
        
        "/buffer" shm-open if
            cr "shm-open failed" cr
            "shm-open" perror
        else
            shm-fd !
            shm-fd @ msgSize mmap \ create an error as large as the largest message
            
        then

        -1 init_run !
    then
    
    hex clear
;

\  filename permission  --
: mkmsg-open
    init_run @ if
        tst_tx /msgFs erase
        iam tst_tx sender strcpy
        3 tst_tx fields c!
        "OPEN"  tst_tx cmd strcpy
        tst_tx value strcpy
        tst_tx key strcpy
    else
        cr
        "Run Init" type cr
    then
;

\ fd pointer len
: mksmg-read
;

: mkmsg-get
    init_run @ if
        tst_tx /msg erase
        tst_tx key strcpy
        iam tst_tx sender strcpy
        2 tst_tx fields c!
        "GET"  tst_tx cmd strcpy
    then
;

\ name value
: mkmsg-set
    init_run @ if
        tst_tx /msg erase
        tst_tx value strcpy
        tst_tx key strcpy
        iam tst_tx sender strcpy
        3 tst_tx fields c!
        "SET"  tst_tx cmd strcpy
    then
;

\ name
: mkmsg-sub 
    init_run @ if
        tst_tx /msg erase
        iam tst_tx sender strcpy

        2 tst_tx fields !
        "SUB"  tst_tx cmd strcpy
        tst_tx key strcpy
    then
;

: mkmsg-unsub
    init_run @ if
        tst_tx /msg erase
        iam tst_tx sender strcpy

        2 tst_tx fields !
        "UNSUB"  tst_tx cmd strcpy
        tst_tx key strcpy
    then
;


: send 
    init_run @ if
\       tst_tx "/client" message!
       tst_tx destination message!
    then
;

: disp
    init_run @ if
        tst_tx /msg dump
    then
;

: .struct \ addr --
    >r

    r@ sender type cr
    r@ fields c@ . cr
    r@ cmd type cr
    r> value type cr
    cr

;

\ timeout --
: msg-get
    iam swap tst_rx message@
;

: open? 
    tst_rx fileIndex w@ w>cell dup 0< if
        drop -1
    else
        0
    then
;

\ 
\ 
\ : msg-get
\     tst_rx qid@ -1 message@ /defn type
\     0x10 = if
\         30 dump
\      else
\         drop
\     then
\ ;
\ 
\ : cmd-eval  \ cmd-addr
\     >r
\     r@ cmd   cmd-buffer strcpy
\     r@ " "   cmd-buffer strcat
\     r@ key   cmd-buffer strcat
\     r@ " "   cmd-buffer strcat
\     r> value cmd-buffer strcat
\     cmd-buffer evaluate
\ ;
\ 
\ 
\ 
\ 
